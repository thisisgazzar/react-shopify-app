{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card, DisplayText, Form, FormLayout, Layout, Page, PageActions, TextField } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nconst UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n`;\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      discount: '',\n      price: '',\n      variantId: ''\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"itemToBeConsumed\", () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.1;\n      this.setState({\n        price,\n        variantId\n      });\n      return (price - discounter).toFixed(2);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      discount: this.itemToBeConsumed()\n    });\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      discount,\n      variantId\n    } = this.state;\n    return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(DisplayText, {\n      size: \"large\"\n    }, name), __jsx(Form, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      prefix: \"$\",\n      value: price,\n      disabled: true,\n      label: \"Original price\",\n      type: \"price\"\n    }), __jsx(TextField, {\n      prefix: \"$\",\n      value: discount,\n      onChange: this.handleChange('discount'),\n      label: \"Discounted price\",\n      type: \"discount\"\n    })), __jsx(\"p\", null, \"This sale price will expire in two weeks\"))), __jsx(PageActions, {\n      primaryAction: [{\n        content: 'Save',\n        onAction: () => {\n          console.log('submitted');\n        }\n      }],\n      secondaryActions: [{\n        content: 'Remove discount'\n      }]\n    })))));\n  }\n\n}\n\nexport default EditProduct;","map":{"version":3,"sources":["D:/react projects/github/react-shopify-next/pages/edit-products.js"],"names":["Card","DisplayText","Form","FormLayout","Layout","Page","PageActions","TextField","store","gql","UPDATE_PRICE","EditProduct","React","Component","discount","price","variantId","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","componentDidMount","itemToBeConsumed","render","name","state","handleChange","content","onAction","console","log"],"mappings":";;;;;AAAA,SACIA,IADJ,EAEIC,WAFJ,EAGIC,IAHJ,EAIIC,UAJJ,EAKIC,MALJ,EAMIC,IANJ,EAOIC,WAPJ,EAQIC,SARJ,QASO,kBATP;AAUA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,MAAMC,YAAY,GAAGD,GAAI;;;;;;;;;;;;CAAzB;;AAaA,MAAME,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAA0C;AAAA;AAAA;;AAAA,mCAC9B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,SAAS,EAAE;AAHP,KAD8B;;AAAA,0CAiEtBC,KAAD,IAAW;AACtB,aAAQC,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAE,SAACF,KAAD,GAASC;AAAX,OAAd,CAAlB;AACH,KAnEqC;;AAAA,8CAqEnB,MAAM;AACrB,YAAME,IAAI,GAAGZ,KAAK,CAACa,GAAN,CAAU,MAAV,CAAb;AACA,YAAMN,KAAK,GAAGK,IAAI,CAACE,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BT,KAA1C;AACA,YAAMC,SAAS,GAAGI,IAAI,CAACE,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BC,EAA9C;AACA,YAAMC,UAAU,GAAGX,KAAK,GAAG,GAA3B;AACA,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAd;AACA,aAAO,CAACD,KAAK,GAAGW,UAAT,EAAqBC,OAArB,CAA6B,CAA7B,CAAP;AACH,KA5EqC;AAAA;;AAOtCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,QAAL,CAAc;AAAEL,MAAAA,QAAQ,EAAE,KAAKe,gBAAL;AAAZ,KAAd;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQhB,MAAAA,KAAR;AAAeD,MAAAA,QAAf;AAAyBE,MAAAA;AAAzB,QAAuC,KAAKgB,KAAlD;AAEA,WACI,MAAC,IAAD,QACI,MAAC,MAAD,QACI,MAAC,MAAD,CAAQ,OAAR,QACI,MAAC,WAAD;AAAa,MAAA,IAAI,EAAC;AAAlB,OAA2BD,IAA3B,CADJ,EAEI,MAAC,IAAD,QACI,MAAC,IAAD;AAAM,MAAA,SAAS;AAAf,OACI,MAAC,UAAD,QACI,MAAC,UAAD,CAAY,KAAZ,QACI,MAAC,SAAD;AACI,MAAA,MAAM,EAAC,GADX;AAEI,MAAA,KAAK,EAAEhB,KAFX;AAGI,MAAA,QAAQ,EAAE,IAHd;AAII,MAAA,KAAK,EAAC,gBAJV;AAKI,MAAA,IAAI,EAAC;AALT,MADJ,EAQI,MAAC,SAAD;AACI,MAAA,MAAM,EAAC,GADX;AAEI,MAAA,KAAK,EAAED,QAFX;AAGI,MAAA,QAAQ,EAAE,KAAKmB,YAAL,CAAkB,UAAlB,CAHd;AAII,MAAA,KAAK,EAAC,kBAJV;AAKI,MAAA,IAAI,EAAC;AALT,MARJ,CADJ,EAiBI,4DAjBJ,CADJ,CADJ,EAwBI,MAAC,WAAD;AACI,MAAA,aAAa,EAAE,CACX;AACIC,QAAAA,OAAO,EAAE,MADb;AAEIC,QAAAA,QAAQ,EAAE,MAAM;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AAJL,OADW,CADnB;AASI,MAAA,gBAAgB,EAAE,CACd;AACIH,QAAAA,OAAO,EAAE;AADb,OADc;AATtB,MAxBJ,CAFJ,CADJ,CADJ,CADJ;AAiDH;;AA/DqC;;AA+E1C,eAAevB,WAAf","sourcesContent":["import {\r\n    Card,\r\n    DisplayText,\r\n    Form,\r\n    FormLayout,\r\n    Layout,\r\n    Page,\r\n    PageActions,\r\n    TextField\r\n} from '@shopify/polaris';\r\nimport store from 'store-js';\r\nimport gql from 'graphql-tag';\r\nconst UPDATE_PRICE = gql`\r\n  mutation productVariantUpdate($input: ProductVariantInput!) {\r\n    productVariantUpdate(input: $input) {\r\n      product {\r\n        title\r\n      }\r\n      productVariant {\r\n        id\r\n        price\r\n      }\r\n    }\r\n  }\r\n`;\r\nclass EditProduct extends React.Component {\r\n    state = {\r\n        discount: '',\r\n        price: '',\r\n        variantId: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ discount: this.itemToBeConsumed() });\r\n    }\r\n\r\n    render() {\r\n        const { name, price, discount, variantId } = this.state;\r\n\r\n        return (\r\n            <Page>\r\n                <Layout>\r\n                    <Layout.Section>\r\n                        <DisplayText size=\"large\">{name}</DisplayText>\r\n                        <Form>\r\n                            <Card sectioned>\r\n                                <FormLayout>\r\n                                    <FormLayout.Group>\r\n                                        <TextField\r\n                                            prefix=\"$\"\r\n                                            value={price}\r\n                                            disabled={true}\r\n                                            label=\"Original price\"\r\n                                            type=\"price\"\r\n                                        />\r\n                                        <TextField\r\n                                            prefix=\"$\"\r\n                                            value={discount}\r\n                                            onChange={this.handleChange('discount')}\r\n                                            label=\"Discounted price\"\r\n                                            type=\"discount\"\r\n                                        />\r\n                                    </FormLayout.Group>\r\n                                    <p>\r\n                                        This sale price will expire in two weeks\r\n                    </p>\r\n                                </FormLayout>\r\n                            </Card>\r\n                            <PageActions\r\n                                primaryAction={[\r\n                                    {\r\n                                        content: 'Save',\r\n                                        onAction: () => {\r\n                                            console.log('submitted');\r\n                                        }\r\n                                    }\r\n                                ]}\r\n                                secondaryActions={[\r\n                                    {\r\n                                        content: 'Remove discount'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Form>\r\n                    </Layout.Section>\r\n                </Layout>\r\n            </Page>\r\n        );\r\n    }\r\n\r\n    handleChange = (field) => {\r\n        return (value) => this.setState({ [field]: value });\r\n    };\r\n\r\n    itemToBeConsumed = () => {\r\n        const item = store.get('item');\r\n        const price = item.variants.edges[0].node.price;\r\n        const variantId = item.variants.edges[0].node.id;\r\n        const discounter = price * 0.1;\r\n        this.setState({ price, variantId });\r\n        return (price - discounter).toFixed(2);\r\n    };\r\n}\r\n\r\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}