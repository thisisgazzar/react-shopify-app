{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation productVariantUpdate($input: ProductVariantInput!) {\\n    productVariantUpdate(input: $input) {\\n      product {\\n        title\\n      }\\n      productVariant {\\n        id\\n        price\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Card, DisplayText, Form, FormLayout, Layout, Page, PageActions, TextField } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nvar UPDATE_PRICE = gql(_templateObject());\n\nvar EditProduct = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditProduct, _React$Component);\n\n  var _super = _createSuper(EditProduct);\n\n  function EditProduct() {\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      discount: '',\n      price: '',\n      variantId: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get('item');\n      var price = item.variants.edges[0].node.price;\n      var variantId = item.variants.edges[0].node.id;\n      var discounter = price * 0.1;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return (price - discounter).toFixed(2);\n    });\n\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        discount: this.itemToBeConsumed()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          price = _this$state.price,\n          discount = _this$state.discount,\n          variantId = _this$state.variantId;\n      return __jsx(Mutation, {\n        mutation: UPDATE_PRICE\n      }, function (handleSubmit, _ref) {\n        var error = _ref.error,\n            data = _ref.data;\n        return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(DisplayText, {\n          size: \"large\"\n        }, name), __jsx(Form, null, __jsx(Card, {\n          sectioned: true\n        }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n          prefix: \"$\",\n          value: price,\n          disabled: true,\n          label: \"Original price\",\n          type: \"price\"\n        }), __jsx(TextField, {\n          prefix: \"$\",\n          value: discount,\n          onChange: _this2.handleChange('discount'),\n          label: \"Discounted price\",\n          type: \"discount\"\n        })), __jsx(\"p\", null, \"This sale price will expire in two weeks\"))), __jsx(PageActions, {\n          primaryAction: [{\n            content: 'Save',\n            onAction: function onAction() {\n              console.log('submitted');\n            }\n          }],\n          secondaryActions: [{\n            content: 'Remove discount'\n          }]\n        })))));\n      });\n    }\n  }]);\n\n  return EditProduct;\n}(React.Component);\n\nexport default EditProduct;","map":{"version":3,"sources":["D:/react projects/github/react-shopify-next/pages/edit-products.js"],"names":["Card","DisplayText","Form","FormLayout","Layout","Page","PageActions","TextField","store","gql","Mutation","UPDATE_PRICE","EditProduct","discount","price","variantId","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","itemToBeConsumed","state","name","handleSubmit","error","data","handleChange","content","onAction","console","log","React","Component"],"mappings":"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","sourcesContent":["import {\r\n    Card,\r\n    DisplayText,\r\n    Form,\r\n    FormLayout,\r\n    Layout,\r\n    Page,\r\n    PageActions,\r\n    TextField\r\n} from '@shopify/polaris';\r\nimport store from 'store-js';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation } from 'react-apollo';\r\n\r\nconst UPDATE_PRICE = gql`\r\n  mutation productVariantUpdate($input: ProductVariantInput!) {\r\n    productVariantUpdate(input: $input) {\r\n      product {\r\n        title\r\n      }\r\n      productVariant {\r\n        id\r\n        price\r\n      }\r\n    }\r\n  }\r\n`;\r\nclass EditProduct extends React.Component {\r\n    state = {\r\n        discount: '',\r\n        price: '',\r\n        variantId: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ discount: this.itemToBeConsumed() });\r\n    }\r\n\r\n    render() {\r\n        const { name, price, discount, variantId } = this.state;\r\n        return (\r\n            <Mutation\r\n                mutation={UPDATE_PRICE}\r\n            >\r\n                {(handleSubmit, { error, data }) => {\r\n\r\n                    return (\r\n                        <Page>\r\n                            <Layout>\r\n                                <Layout.Section>\r\n                                    <DisplayText size=\"large\">{name}</DisplayText>\r\n                                    <Form>\r\n                                        <Card sectioned>\r\n                                            <FormLayout>\r\n                                                <FormLayout.Group>\r\n                                                    <TextField\r\n                                                        prefix=\"$\"\r\n                                                        value={price}\r\n                                                        disabled={true}\r\n                                                        label=\"Original price\"\r\n                                                        type=\"price\"\r\n                                                    />\r\n                                                    <TextField\r\n                                                        prefix=\"$\"\r\n                                                        value={discount}\r\n                                                        onChange={this.handleChange('discount')}\r\n                                                        label=\"Discounted price\"\r\n                                                        type=\"discount\"\r\n                                                    />\r\n                                                </FormLayout.Group>\r\n                                                <p>\r\n                                                    This sale price will expire in two weeks\r\n                                                </p>\r\n                                            </FormLayout>\r\n                                        </Card>\r\n                                        <PageActions\r\n                                            primaryAction={[\r\n                                                {\r\n                                                    content: 'Save',\r\n                                                    onAction: () => {\r\n                                                        console.log('submitted');\r\n                                                    }\r\n                                                }\r\n                                            ]}\r\n                                            secondaryActions={[\r\n                                                {\r\n                                                    content: 'Remove discount'\r\n                                                }\r\n                                            ]}\r\n                                        />\r\n                                    </Form>\r\n                                </Layout.Section>\r\n                            </Layout>\r\n                        </Page>\r\n                    );\r\n                }}\r\n            </Mutation>\r\n        );\r\n    }\r\n\r\n    handleChange = (field) => {\r\n        return (value) => this.setState({ [field]: value });\r\n    };\r\n\r\n    itemToBeConsumed = () => {\r\n        const item = store.get('item');\r\n        const price = item.variants.edges[0].node.price;\r\n        const variantId = item.variants.edges[0].node.id;\r\n        const discounter = price * 0.1;\r\n        this.setState({ price, variantId });\r\n        return (price - discounter).toFixed(2);\r\n    };\r\n}\r\n\r\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}